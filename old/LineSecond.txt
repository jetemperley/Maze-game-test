using System;

namespace test{

    public class Line{

        public float m, b;
        public int x1, y1, x2, y2;
        public int? yUp, yLow, xUp, xLow;

        public Line(){
        }

        public Line(int x1_, int y1_, int x2_, int y2_){
            fromPoints(x1_, y1_, x2_, y2_);
        }

        public void fromPoints(int x1_, int y1_, int x2_, int y2_){
            x1 = x1_;
            y1 = y1_;
            x2 = x2_;
            y2 = y2_;

            m = (y1_ - y2_)/(float)(x1_ - x2_);
            b = y1_ - m*x1_;
            if (y1_ > y2_){
                yUp = y1_;
                yLow = y2_;
            } else if (y2_ > y1_){
                yUp = y2_;
                yLow = y1_;
            } else {
                yUp = null;
                yLow = null;
            }

            if (x1_ > x2_){
                xUp = x1_;
                xLow = x2_;
            } else if (x2_ > x1_){
                xUp = x2_;
                xLow = x1_;
            } else {
                xUp = null;
                xLow = null;
            }
        }

        // gets the orientation of a point relitive to this line
        // negitive = above, positive = below, 0 = on the line
        public float getOrientation(int x1_, int y1_){
            return m*x1_ -y1_ +b;
        }

        public float getLength(){
            return Math.Sqrt(Math.Pow(x1-x2, 2) + Math.Pow(y1-y2, 2));
        }

        public float getYfor(int xi){
            return m*xi + b;
        }

        public float getXfor(int yi){
            return (yi-b)/m;
        }
    }
}